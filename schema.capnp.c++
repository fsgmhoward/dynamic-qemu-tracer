// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: schema.capnp

#include "schema.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_c6d1f6ea116ddc0d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     13, 220, 109,  17, 234, 246, 209, 198,
     13,   0,   0,   0,   1,   0,   2,   0,
     36, 199,  60, 255,  86,  96,  21, 133,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 104, 101, 109,  97,  46,  99,
     97, 112, 110, 112,  58,  73, 110, 115,
    116, 114, 117,  99, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     98, 101, 103, 105, 110,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101, 110, 103, 116, 104,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c6d1f6ea116ddc0d = b_c6d1f6ea116ddc0d.words;
#if !CAPNP_LITE
static const uint16_t m_c6d1f6ea116ddc0d[] = {0, 1};
static const uint16_t i_c6d1f6ea116ddc0d[] = {0, 1};
const ::capnp::_::RawSchema s_c6d1f6ea116ddc0d = {
  0xc6d1f6ea116ddc0d, b_c6d1f6ea116ddc0d.words, 48, nullptr, m_c6d1f6ea116ddc0d,
  0, 2, i_c6d1f6ea116ddc0d, nullptr, nullptr, { &s_c6d1f6ea116ddc0d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_91179335117bb024 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     36, 176, 123,  17,  53, 147,  23, 145,
     13,   0,   0,   0,   1,   0,   0,   0,
     36, 199,  60, 255,  86,  96,  21, 133,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 104, 101, 109,  97,  46,  99,
     97, 112, 110, 112,  58,  73, 110, 115,
    116, 114, 117,  99, 116, 105, 111, 110,
     84,  97,  98, 108, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 115, 116, 114, 117,  99, 116,
    105, 111, 110, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     13, 220, 109,  17, 234, 246, 209, 198,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_91179335117bb024 = b_91179335117bb024.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_91179335117bb024[] = {
  &s_c6d1f6ea116ddc0d,
};
static const uint16_t m_91179335117bb024[] = {0};
static const uint16_t i_91179335117bb024[] = {0};
const ::capnp::_::RawSchema s_91179335117bb024 = {
  0x91179335117bb024, b_91179335117bb024.words, 38, d_91179335117bb024, m_91179335117bb024,
  1, 1, i_91179335117bb024, nullptr, nullptr, { &s_91179335117bb024, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Instruction
constexpr uint16_t Instruction::_capnpPrivate::dataWordSize;
constexpr uint16_t Instruction::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Instruction::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Instruction::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// InstructionTable
constexpr uint16_t InstructionTable::_capnpPrivate::dataWordSize;
constexpr uint16_t InstructionTable::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind InstructionTable::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* InstructionTable::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



